## hidden code

def mk_coverage():
    covered = set()
    target = set(range(6))
    count = 0
    
    def coverage(func):
        nonlocal covered, target, count
    
        def wrapper(n):
            nonlocal covered, count
            if n <= 0:
                covered.add(0)
            if n == 1:
                covered.add(1)
            r = func (n)
            lenr = len (r)
            if lenr == 1:
                covered.add(2)
            if lenr == 2:
                covered.add(3)
            if (lenr > 2) and ( lenr % 2 == 0):
                covered.add(4)
            if lenr > 2 and lenr % 2 == 1:
                covered.add(5)
            count += 1
            return r
        if func == "achieved": return len(covered)
        if func == "required": return len(target)
        if func == "count" : return count
        if func.__doc__:
            wrapper.__doc__ = func.__doc__
        wrapper.__hints__ = typing.get_type_hints (func)
        return wrapper
    return coverage

coverage = mk_coverage()
try:
    divisors = coverage(divisors)
except:
    pass